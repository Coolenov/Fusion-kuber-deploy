- name: Apt update
  shell: apt update

- name: Install gnupg
  shell: apt install gnupg -y

- name: Add GPG key for Kubernetes repository
  when: ansible_facts['os_family'] == "Debian"
  apt_key:
    url: 'https://packages.cloud.google.com/apt/doc/apt-key.gpg'
    state: present

- name: Add Kubernetes repository
  when: ansible_facts['os_family'] == "Debian"
  apt_repository:
    repo: 'deb https://apt.kubernetes.io/ kubernetes-xenial main'
    state: present
    filename: 'kubernetes'
    update_cache: yes

- name: Import Docker GPG key
  when: ansible_facts['os_family'] == "Debian"
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present

- name: Add Docker repository for containerd
  when: ansible_facts['os_family'] == "Debian"
  apt_repository:
    repo: 'deb [arch=amd64] https://download.docker.com/linux/debian buster stable'
    state: present
    filename: docker
    update_cache: yes
    validate_certs: yes

- name: Install packages apt
  when: ansible_facts['os_family'] == "Debian"
  apt:
    name:
      - net-tools
      - mc
      - vim
      - git
      - bash-completion
      - tar
      - rsyslog
      - chrony
    state: latest

- name: Enable NTP server
  service:
    name: chronyd
    state: started
    enabled: yes

- name: Enable rsyslog
  service:
    name: rsyslog
    state: started
    enabled: yes

- name: Check is swap enable
  shell: swapon
  register: swap_present
  changed_when: false
  ignore_errors: true

- name: If swap is enabled - disable it
  shell: swapoff -a
  when: swap_present.stdout != ""

- name: Disable SWAP in fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*\s*swap\s*.*)$'
    replace: '# \1'

- name: Disable AppArmor
  when: "'apparmor module is loaded.' in apparmor_status_output.stdout"
  shell: systemctl disable apparmor && systemctl stop apparmor
  ignore_errors: true

- name: Disable firewall
  when: ansible_facts['os_family'] == "Debian"
  shell: systemctl disable nftables

- name: Remove containerd config.toml
  when: ansible_facts['os_family'] == "Debian"
  file:
    path: /etc/containerd/config.toml
    state: absent

- name: Set crictl.yaml
  copy:
    src: crictl.yaml
    dest: /etc/crictl.yaml
    owner: root
    mode: 644

- name: Load module "br_netfilter"
  modprobe:
    name: br_netfilter

- name: Load module "overlay"
  modprobe:
    name: overlay

- name: Load module permanet
  copy:
    src: modules-kubernetes.conf
    dest: /etc/modules-load.d/modules-kubernetes.conf

- name: Set Sysctl on all nodes
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - name: net.ipv4.ip_forward
      value: 1
    - name: net.bridge.bridge-nf-call-iptables
      value: 1
    - name: net.bridge.bridge-nf-call-ip6tables
      value: 1
    - name: vm.max_map_count # for opensearch & elasticserarch
      value: 262144

- name: Set Sysctl on master node(s)
  when: inventory_hostname in groups['masters']
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - name: net.ipv4.ip_nonlocal_bind
      value: 1
